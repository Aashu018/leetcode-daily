/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null){
            return head;
        }
        ListNode temp = head;
        int size  = 1;
        while(temp.next!= null){
            temp = temp.next;
            size++;
        }
        if(temp.next == null){
            temp.next = head;
        }
        k = k%size;
        System.out.println(size);
        int rot = size-k;
        
        while(rot>0){
            head = head.next;
            rot--;
        }
        ListNode tem = head;
        while(tem.next != head){
            tem = tem.next;
        }
        if(tem.next == head){
            tem.next = null;
        }
        return head;
    }
}
